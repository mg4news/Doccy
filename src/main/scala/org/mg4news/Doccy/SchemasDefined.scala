//==============================================================================================
// This is free and unencumbered software released into the public domain.
//
// Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software,
// either in source code form  or as a compiled binary, for any purpose, commercial or
// non-commercial, and by any means.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
// BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// This is a simplified version of UNLICENSE.
// For more information, please refer to <http://unlicense.org/>
//==============================================================================================
package org.mg4news.Doccy

import java.time.LocalDateTime
import org.mongodb.scala.bson.ObjectId

// Document for the actual issued document (recursive much?). An issued document has:
// - a name
// - a description
// - a project, TLA from DocProj
// - a category (because "type" is a keyword!) from DocCat
// - an author, email from DocUser
// - a list of keywords from DocWord
// - an autogenerated creation timestamp
object DocDoc {
  def apply(
             name: String,
             description: String,
             proj: String,
             category: String,
             email: String,
             keywords: String = ","): DocDoc =
    DocDoc(new ObjectId(), name, description, proj, category, email: String, keywords, created=LocalDateTime.now())
}
case class DocDoc(
  _id: ObjectId,
  name: String,
  description: String,
  proj: String,
  category: String,
  email: String,
  keywords: String,
  created: LocalDateTime)




